/* this ALWAYS GENERATED file contains the definitions for the interfaces */


/* File created by MIDL compiler version 5.01.0164 */
/* at Tue Sep 05 21:10:08 2006
 */
/* Compiler settings for rpc_exploit_040.idl, rpc_exploit_040.acf:
    Os (OptLev=s), W1, Zp8, env=Win32, ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __rpc_exploit_040_h__
#define __rpc_exploit_040_h__

#ifdef __cplusplus
extern "C"{
#endif 

/* Forward Declarations */ 

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * ); 

#ifndef __browser_INTERFACE_DEFINED__
#define __browser_INTERFACE_DEFINED__

/* interface browser */
/* [implicit_handle][endpoint][version][uuid] */ 

long fun_00( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_01( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_02( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_03( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_04( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_05( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_06( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_07( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_08( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_09( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_0a( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_0b( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_0c( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_0d( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_0e( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_0f( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_10( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_11( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_12( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_13( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_14( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_15( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_16( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_17( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_18( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_19( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_1a( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_1b( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_1c( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_1d( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long fun_1e( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00);

long NetpwPathCanonicalize( 
    /* [string][unique][in] */ wchar_t __RPC_FAR *arg_00,
    /* [string][in] */ wchar_t __RPC_FAR *arg_01,
    /* [size_is][out] */ unsigned char __RPC_FAR *arg_02,
    /* [range][in] */ long arg_03,
    /* [string][in] */ wchar_t __RPC_FAR *arg_04,
    /* [out][in] */ long __RPC_FAR *arg_05,
    /* [in] */ long arg_06);


extern handle_t failwest_IfHandle;


extern RPC_IF_HANDLE browser_v3_0_c_ifspec;
extern RPC_IF_HANDLE browser_v3_0_s_ifspec;
#endif /* __browser_INTERFACE_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif
